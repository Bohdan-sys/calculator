{"version":3,"sources":["contexts/Buttons.js","contexts/formula.js","contexts/ActionProvider.js","components/Display.js","components/KeyBoard.js","App.js","reportWebVitals.js","index.js"],"names":["buttons","name","action","operatorToFunction","num1","num2","countExpression","arr","test","length","slice","includes","i","splice","ActionContext","React","createContext","ActionContextProvider","children","button","useState","answer","setAnswer","setArr","count","setCount","formattedCount","value","toString","replace","formattedArray","flat","filter","Boolean","console","log","useEffect","setTimeout","Provider","addCount","substring","Display","useContext","className","id","KeyBoard","map","item","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a436d9fa.chunk.js","sourcesContent":["export const buttons = [\r\n    {\r\n        name: 'AC',\r\n        action: 'clear'\r\n    },\r\n    {\r\n        name: '/',\r\n        action: 'divide'\r\n    },\r\n    {\r\n        name: 'X',\r\n        action: 'multiply'\r\n    },\r\n    {\r\n        name: '7',\r\n        action: 'seven'\r\n    },\r\n    {\r\n        name: '8',\r\n        action: 'eight'\r\n    },\r\n    {\r\n        name: '9',\r\n        action: 'nine'\r\n    },\r\n    {\r\n        name: '-',\r\n        action: 'subtract'\r\n    },\r\n    {\r\n        name: '4',\r\n        action: 'four'\r\n    },\r\n    {\r\n        name: '5',\r\n        action: 'five'\r\n    },\r\n    {\r\n        name: '6',\r\n        action: 'six'\r\n    },\r\n    {\r\n        name: '+',\r\n        action: 'add'\r\n    },\r\n    {\r\n        name: '1',\r\n        action: 'one'\r\n    },\r\n    {\r\n        name: '2',\r\n        action: 'two'\r\n    },\r\n    {\r\n        name: '3',\r\n        action: 'three'\r\n    },\r\n    {\r\n        name: '=',\r\n        action: 'equals'\r\n    },\r\n    {\r\n        name: '0',\r\n        action: 'zero'\r\n    },\r\n    {\r\n        name: '.',\r\n        action: 'decimal'\r\n    }\r\n]","\r\nconst operatorToFunction = {\r\n    \"+\": (num1, num2) => +num1 + +num2,\r\n    \"-\": (num1, num2) => +num1 - +num2,\r\n    \"*\": (num1, num2) => +num1 * +num2,\r\n    \"/\": (num1, num2) => +num1 / +num2\r\n}\r\n\r\n//----------Immediate Execution Logic--------------\r\n/*\r\nconst searchExp = (arr) => {\r\n    if (arr.length === 1) {\r\n        return arr\r\n    } else {\r\n\r\n        let val;\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n\r\n            if (arr[i] === '/') {\r\n                val = operatorToFunction[arr[i]](arr[i - 1], arr[i + 1])\r\n                arr.splice(i - 1, 3, val)\r\n                break\r\n            }\r\n\r\n            if (arr[i] === '*') {\r\n                val = operatorToFunction[arr[i]](arr[i - 1], arr[i + 1])\r\n                arr.splice(i - 1, 3, val)\r\n                break\r\n            }\r\n\r\n            if (arr[i] === '+') {\r\n                val = operatorToFunction[arr[i]](arr[i - 1], arr[i + 1])\r\n                arr.splice(i - 1, 3, val)\r\n                break\r\n            }\r\n\r\n            if (arr[i] === '-') {\r\n                val = operatorToFunction[arr[i]](arr[i - 1], arr[i + 1])\r\n                arr.splice(i - 1, 3, val)\r\n                break\r\n            }\r\n        }\r\n        return searchExp(arr)\r\n    }\r\n}\r\n*/\r\n//----------Formula/Expression Logic---------------\r\n//-------------------------ver. 1----------------------------------------(actualy doesn`t work .cause performs the action in the order specified in the array below)\r\nexport const seekAndDestroy = (arr, operand) => {\r\n    let operandIndex = arr.indexOf(operand)\r\n    let val = operatorToFunction[operand](arr[operandIndex - 1], arr[operandIndex + 1])\r\n    arr.splice(operandIndex - 1, 3, val)\r\n    return arr\r\n}\r\n\r\nexport const calculate = (arr, operands = [\"*\", \"/\", \"-\", \"+\"]) => {\r\n    if (operands.length === 0) {\r\n        return +arr\r\n    } else {\r\n        for (let i = 0; i < operands.length; i++) {\r\n            arr[arr.length - 1] === operands[i] && arr.pop()\r\n\r\n            if (arr.indexOf(operands[i]) > 0) {\r\n\r\n                seekAndDestroy(arr, operands[i])\r\n                return calculate(arr, operands)\r\n            } else {\r\n                operands.shift()\r\n                return calculate(arr, operands)\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n//-------------------ver. 2-------------------------------\r\n\r\nexport const countExpression = (arr) => {\r\n    if (/[*/+-]$/.test(arr[arr.length - 1])) {\r\n        return countExpression(arr.slice(0, -1))\r\n    }\r\n    if (arr.includes('/') || arr.includes('*')) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] === '/') {\r\n                arr.splice(i - 1, 3, operatorToFunction[arr[i]](arr[i - 1], arr[i + 1]))\r\n                break\r\n            }\r\n            if (arr[i] === '*') {\r\n                arr.splice(i - 1, 3, operatorToFunction[arr[i]](arr[i - 1], arr[i + 1]))\r\n                break\r\n            }\r\n        }\r\n        return countExpression(arr)\r\n    } else {\r\n        if (arr.includes('+') || arr.includes('-')) {\r\n            for (let i = 0; i < arr.length; i++) {\r\n                if (arr[i] === '+') {\r\n                    arr.splice(i - 1, 3, operatorToFunction[arr[i]](arr[i - 1], arr[i + 1]))\r\n                    break\r\n                }\r\n                if (arr[i] === '-') {\r\n                    arr.splice(i - 1, 3, operatorToFunction[arr[i]](arr[i - 1], arr[i + 1]))\r\n                    break\r\n                }\r\n            }\r\n            return countExpression(arr)\r\n        } else {\r\n            return +arr\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// console.log(eval([\"2\", \"/\", \"5\", \"*\", \"2\", \"*\", '-3'].join('')))\r\n// console.log(countExpression([\"2\", \"/\", \"5\", \"*\", \"2\", \"*\", '-3', '-', '-', '+', '/', '/', '/']))\r\n// console.log(searchExp(['3', '+', '5', '*', '6', '-', '2', '/', '4']))\r\n\r\n\r\n////------------------------------------------doesn`t works as well\r\n// const findOperator = (arr) => {\r\n//     const operator = arr.filter((ch) => [\"+\", \"-\", \"*\", \"/\"].includes(ch))\r\n//     const newArr = []\r\n//     for (let i = 0; i < operator.length; i++) {\r\n//         for (let k = 0; k < arr.length; k++) {\r\n//             if (operator[i] === arr[i]) {\r\n\r\n//             }\r\n\r\n//         }\r\n//     }\r\n//     return operator;\r\n// }\r\n\r\n// console.log(findOperator([\"6\", \"5\", \"5\", \"+\", \"6\", \"2\", \"2\", \"6\", \"3\", \"+\", \"2\", \"5\", \"*\", \"2\", \"5\", \"5\", \"6\"]))\r\n// console.log([\"6\", \"5\", \"5\", \"+\", \"6\", \"2\", \"2\", \"6\", \"3\", \"+\", \"2\", \"5\", \"*\", \"2\", \"5\", \"5\", \"6\", \"*\"].join('').replace(/[, ]+/g, '').split(' '))","import React, { useState, useEffect } from \"react\";\r\nimport { buttons } from './Buttons'\r\nimport { countExpression } from './formula'\r\n\r\nexport const ActionContext = React.createContext();\r\n\r\nexport const ActionContextProvider = ({ children }) => {\r\n    const button = buttons\r\n\r\n    const [answer, setAnswer] = useState()\r\n\r\n    const [arr, setArr] = useState([])\r\n\r\n    const [count, setCount] = useState('0')\r\n\r\n    const limitter = () => {\r\n        setCount('Digit Limit Met')\r\n        setTimeout(() => setCount(answer), 1000)\r\n    }\r\n\r\n    const formattedCount = (value) => {\r\n        return value.toString().replace(/\\.$/gm, '')\r\n    }\r\n\r\n    const formattedArray = (arr) => {\r\n        return arr.flat().slice(0, -1).filter(Boolean)\r\n    }\r\n\r\n    console.log(arr)\r\n\r\n    const addCount = (value) => {\r\n\r\n        if (/^[-0-9.]/.test(value) && count.length <= 17 && !(/[a-zA-Z]/.test(count))) {\r\n            setAnswer(count.substring(0, 18))\r\n\r\n            if (!(value === '.' && count.includes('.'))) {\r\n                setCount(count + value)\r\n            }\r\n\r\n            if (count === '0' && value === '0') {\r\n                setCount(value)\r\n            }\r\n\r\n            if (count === '0' && value !== '0') {\r\n                setCount(value)\r\n            }\r\n\r\n            if (count === '0' && value === '.') {\r\n                setCount(count + value)\r\n            }\r\n\r\n            if (!count && value === '.') {\r\n                setCount('0' + value)\r\n            }\r\n\r\n            if (count === '-' && value === '.') {\r\n                setCount(count + '0' + value)\r\n            }\r\n        }\r\n\r\n        if (count.length !== 0 && /[X/+-]/.test(value)) {\r\n            count !== '-' && setArr([...arr, formattedCount(count), value.replace(/X/, '*')])\r\n            setCount('')\r\n        }\r\n        if (count.length === 0 && /[X/+]$/.test(value)) {\r\n            setArr([...formattedArray(arr), value.replace(/X/, '*')])\r\n            setCount('')\r\n        }\r\n        if (value === '=' && !(arr.includes(value))) {\r\n            setArr([...arr, formattedCount(count), value])\r\n            setCount('')\r\n        }\r\n        if (value === '=' && /[*-/+]/.test(arr[arr.length - 1]) && !count) {\r\n            setArr([...formattedArray(arr), value])\r\n        }\r\n        if (arr.includes('=') && /[X/+-]/.test(value)) {\r\n            setArr([...formattedCount(count), value.replace(/X/, '*')])\r\n        }\r\n        if (arr.includes('=') && /^[-0-9]/.test(value)) {\r\n            setArr([])\r\n            setCount(value)\r\n        }\r\n        if (arr.includes('=') && value === '.') {\r\n            setArr([])\r\n            setCount('0' + value)\r\n        }\r\n        if (value === 'AC') {\r\n            setCount('0')\r\n            setArr([])\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (arr[arr.length - 1] === '=') {\r\n            setCount(countExpression(formattedArray(arr)))\r\n            setArr([...arr, countExpression(formattedArray(arr))])\r\n        }\r\n        count.length > 17 && limitter();\r\n\r\n    }, [arr, count])\r\n\r\n    return (\r\n        <ActionContext.Provider value={{\r\n            button,\r\n            count,\r\n            addCount: addCount,\r\n            arr\r\n        }}>\r\n            {children}\r\n        </ActionContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ActionContext } from \"../contexts/ActionProvider\";\r\n\r\nconst Display = () => {\r\n    const { count, arr } = useContext(ActionContext);\r\n\r\n\r\n\r\n    return (\r\n        <div className='screen' id='display'>\r\n            <div className='screen__formula'>\r\n                <h3 className='caption caption--size_5 caption--color_white caption--font_digital caption--color_orange caption--align_end'>\r\n                    {arr}\r\n                </h3>\r\n            </div>\r\n            <div className='screen__output'>\r\n                <h1 className='caption caption--size_4 caption--color_white caption--font_digital caption--align_end'>\r\n                    {count}\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display\r\n\r\n","\r\nimport React, { useContext } from 'react';\r\nimport { ActionContext } from \"../contexts/ActionProvider\";\r\n\r\n\r\nconst KeyBoard = () => {\r\n    const { button, addCount } = useContext(ActionContext)\r\n\r\n    return (\r\n\r\n        <div className='keyBoard'>\r\n            {button.map((item, i) =>\r\n                <button className='key' id={item.action} key={i}\r\n                    onClick={() => {\r\n                        addCount(item.name)\r\n                    }}>\r\n                    <span className='caption caption--size_5 caption--color_white'>\r\n                        {item.name}\r\n                    </span>\r\n                </button>\r\n            )}\r\n        </div >\r\n    )\r\n}\r\nexport default KeyBoard","import React from 'react';\nimport './sass/App.sass';\n\n\nimport Display from './components/Display'\nimport KeyBoard from './components/KeyBoard';\nimport { ActionContextProvider } from './contexts/ActionProvider';\n\n\n\nfunction App() {\n\n\n  return (\n    <div className='App'>\n      <div className='calculator'>\n        <ActionContextProvider>\n          <Display />\n          <KeyBoard />\n        </ActionContextProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}